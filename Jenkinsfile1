node{

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

echo "The job name is: ${env.JOB_NAME}"
echo "The node name is: ${env.NODE_NAME}" 
echo "The Build number is: ${env.BUILD_NUMBER}"
echo "The jenkins home directry is: ${JENKINS_HOME}"

def mavenHome = tool name:"maven3.8.5"


try {
sendSlackNotification("STARTED")

stage('CheckoutCode'){

git branch: 'development', credentialsId: '925c029d-28f9-4846-8e70-a3560a0e6408', url: 'https://github.com/Bhavana-Dosti/maven-web-application.git'

}

stage('Build'){

sh "${mavenHome}/bin/mvn clean package"

}

stage('Execute'){

sh "${mavenHome}/bin/mvn sonar:sonar"

}
/*
stage('UploadArtifactsIntoNexus'){

sh "${mavenHome}/bin/mvn deploy"

}

stage('DeployIntoTomcatServer'){

sshagent(['62858bb4-2db7-49ea-9190-af6929d199c4']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.3.73:/opt/apache-tomcat-9.0.70/webapps"
}
}
*/

}//try closing

catch(e){
currentBuild.result = "FAILURE"
}

finally {
        sendSlackNotifications(currentBuild.result) 

}
}


//slack send notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#icicibank')
}
